{"version":3,"sources":["images/leo-titanic.PNG","components/Header/index.js","components/Wrapper/index.js","components/Card/index.js","components/Footer/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","href","currentScore","topScore","Wrapper","children","Card","onClick","clickImage","id","alt","src","image","Footer","App","state","images","gameOver","_this","setState","console","log","this","forEach","card","count","alert","randomizeCards","sort","Math","random","find","i","_this2","components_Header","components_Wrapper","whatever","map","components_Card","key","components_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"m5BAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uSCkBzBC,SAfA,SAAAC,GACb,OAAOC,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACxBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,eACAJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,mBAAiDJ,EAAMM,aAAvD,iBAAmFN,EAAMO,WAE7FN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,0BACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAY,6BAAhB,yHCJYI,SAJC,SAAAR,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WAAhB,IAA4BJ,EAAMS,SAAlC,OCOIC,SARF,SAAAV,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,QAAS,kBAAMX,EAAMY,WAAWZ,EAAMa,MAC1DZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKW,IAAKd,EAAMa,GAAIE,IAAKf,EAAMgB,yCCEtBC,MALf,WACI,OAAOhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAAf,IAA6CH,EAAAC,EAAAC,cAAA,sDC2EzCe,oNApEXC,MAAO,CACLb,aAAc,EACdC,SAAU,EACVa,YAGFC,SAAW,WACHC,EAAKH,MAAMb,aAAegB,EAAKH,MAAMZ,UACvCe,EAAKC,SAAS,CAAChB,SAAUe,EAAKH,MAAMb,cAAe,WACjDkB,QAAQC,IAAIC,KAAKP,MAAMZ,YAG3Be,EAAKH,MAAMC,OAAOO,QAAQ,SAAAC,GAGxB,OAFAN,EAAKC,SAAS,CAACjB,aAAa,IAC5BsB,EAAKC,MAAQ,GACN,IAEuB,KAA5BP,EAAKH,MAAMb,aAETwB,MAAM,0DAIZA,MAAM,mEAERC,eAAiB,WAEf,OADAT,EAAKH,MAAMC,OAAOY,KAAK,kBAAMC,KAAKC,SAAW,MACtC,KAGTtB,WAAa,SAAAC,GACXS,EAAKH,MAAMC,OAAOe,KAAK,SAACP,EAAKQ,GAC3B,GAAGR,EAAKf,KAAOA,EAAG,CAChB,GAAuB,IAApBO,EAAOgB,GAAGP,MAMb,OALIT,EAAOgB,GAAGP,MAAQT,EAAOgB,GAAGP,MAAQ,EACtCP,EAAKC,SAAS,CAACjB,aAAcgB,EAAKH,MAAMb,aAAe,GAAI,WAC3DkB,QAAQC,IAAIC,KAAKP,MAAMb,gBAEzBgB,EAAKS,kBACE,EAGPT,EAAKD,uFAMJ,IAAAgB,EAAAX,KACL,OACGzB,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACmC,EAAD,CAAQhC,aAAcoB,KAAKP,MAAMb,aAAcC,SAAUmB,KAAKP,MAAMZ,WACpEN,EAAAC,EAAAC,cAACoC,EAAD,KACCf,QAAQC,IAAIe,KACZd,KAAKP,MAAMC,OAAOqB,IAAI,SAAAb,GAAI,OACvB3B,EAAAC,EAAAC,cAACuC,EAAD,CACA9B,WAAYyB,EAAKzB,WACbC,GAAIe,EAAKf,GACT8B,IAAKf,EAAKf,GACVG,MAAOY,EAAKZ,WAG5Bf,EAAAC,EAAAC,cAACyC,EAAD,cA/DUC,oBCJlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d9906a78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leo-titanic.7e257fc0.PNG\";","import React from \"react\";\nimport \"./style.css\"\n\nconst Header = props =>{\n  return <div> <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\n      <span className=\"navbar-brand\" > Current Score: {props.currentScore} | Top Score: {props.topScore}</span>\n  </nav>\n  <div className=\"jumbotron-backgroundImage\">\n  <div className=\"transbox\">\n  <h1>Clicky Game!</h1>\n   <h4 className = \"font-family: Cormorant SC\">Click on a Leo Card to earn points, but don't click on it more than once until all the cards have been Selected!</h4>\n  </div>\n</div>\n\t</div>\n}\n\n\nexport default Header\n\n\n","import React from \"react\";\nimport \"./style.css\"\n\nconst Wrapper = props => {\n    return <div className= \"wrapper\"> {props.children} </div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickImage(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.id} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\"\r\nimport \"./style.css\"\r\n\r\nfunction Footer(){\r\n    return(<div className=\"footer navbar-dark bg-dark\"> <strong>ClickyGame - Choose a Leo Edition.</strong></div>)\r\n}\r\n\r\n\r\nexport default Footer;","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport Header from './components/Header'\nimport Wrapper from './components/Wrapper'\nimport Card from \"./components/Card\"\nimport images from \"./images.json\"\nimport whatever from './images/leo-titanic.PNG'\nimport Footer from './components/Footer';\nimport './App.css';\n\nclass App extends Component{\n    state ={\n      currentScore: 0,\n      topScore: 0,\n      images \n     // images\n    }\n    gameOver = () => {\n        if (this.state.currentScore > this.state.topScore){\n          this.setState({topScore: this.state.currentScore}, function(){\n            console.log(this.state.topScore);\n          })\n        }\n        this.state.images.forEach(card => {\n          this.setState({currentScore:0})\n          card.count = 0;\n          return true;\n        });\n        if (this.state.currentScore === 12){\n            // this.setState({topScore: this.state.currentScore}, function(){\n              alert(\"You won!!! :) Click on a Leo card to begin a new game!\");\n             \n           }\n           else\n        alert(\"Sorry, you lost! :( Click on a Leo card to begin a new game.\")\n      }\n      randomizeCards = () => {\n        this.state.images.sort(() => Math.random() - 0.5)\n        return true;\n      }\n      \n      clickImage = id => {\n        this.state.images.find((card,i) => {\n          if(card.id === id){\n            if(images[i].count === 0){\n                images[i].count = images[i].count + 1\n              this.setState({currentScore: this.state.currentScore + 1}, function(){\n              console.log(this.state.currentScore)\n            })\n            this.randomizeCards();\n            return true\n          }\n          else{\n            this.gameOver();\n          }\n        }\n        })\n      }\n  // Map over this.state.images and render a cardCard component for each card object\n    render() {\n        return (\n           <div>\n                <Header currentScore={this.state.currentScore} topScore={this.state.topScore}></Header>\n                <Wrapper>\n                {console.log(whatever)}\n                {this.state.images.map(card => (\n                    <Card\n                    clickImage={this.clickImage}\n                        id={card.id}\n                        key={card.id}\n                        image={card.image} />\n        ))}\n          </Wrapper>\n        <Footer></Footer>\n        </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}